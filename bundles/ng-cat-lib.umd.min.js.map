{"version":3,"sources":["ng://ng-cat-lib/lib/ng-cat-lib.service.ts","ng://ng-cat-lib/lib/ng-cat-lib.component.ts","ng://ng-cat-lib/lib/multitextbox/multitextbox.component.ts","ng://ng-cat-lib/lib/ng-cat-lib.module.ts"],"names":["NgCatLibService","Injectable","args","providedIn","NgCatLibComponent","prototype","ngOnInit","Component","selector","template","MultiTextboxComponent","formBuilder","this","faTimesCircle","faPlusSquare","showAddNew","onChange","multiTextboxFormGroup","group","valueArray","array","addTextbox","get","push","createTextboxFormGroup","removeTextbox","index","removeAt","writeValue","value","_this","control","FormArray","length","split","forEach","item","subscription","unsubscribe","setControl","valueChanges","subscribe","items","setShowAddNewProperty","map","join","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getControls","frmGrp","key","controls","text","trim","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","FormBuilder","NgCatLibModule","NgModule","declarations","imports","BrowserModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","FontAwesomeModule","exports"],"mappings":"0qBAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,iBACVC,SAAU,6FAcZL,EAlBA,GCAAM,EAAA,WA+BE,SAAAA,EAAoBC,GAAAC,KAAAD,YAAAA,EAPbC,KAAAC,cAAgBA,EAAAA,cAChBD,KAAAE,aAAeA,EAAAA,aAGfF,KAAAG,YAAa,EAIbH,KAAAI,SAAQ,aAsEjB,OApESN,EAAAL,UAAAC,SAAP,WACEM,KAAKK,sBAAwBL,KAAKD,YAAYO,MAAM,CAClDC,WAAYP,KAAKD,YAAYS,MAAM,OAIhCV,EAAAL,UAAAgB,WAAP,WACGT,KAAKK,sBAAsBK,IAAI,cAA4BC,KAC1DX,KAAKY,uBAAuB,MAIzBd,EAAAL,UAAAoB,cAAP,SAAqBC,GAClBd,KAAKK,sBAAsBK,IAAI,cAA4BK,SAASD,IAIhEhB,EAAAL,UAAAuB,WAAP,SAAkBC,GAAlB,IAAAC,EAAAlB,KACQmB,EAAU,IAAIC,EAAAA,UAAU,IAC1BH,GAASA,EAAMI,OAAS,EAC1BJ,EAAMK,MAAM,KAAKC,QAAO,SAACC,GACvBL,EAAQR,KAAKO,EAAKN,uBAAuBY,OAG3CL,EAAQR,KAAKX,KAAKY,uBAAuB,KACzCZ,KAAKG,YAAa,GAGhBH,KAAKyB,cACPzB,KAAKyB,aAAaC,cAGpB1B,KAAKK,sBAAsBsB,WAAW,aAAcR,GAEpDnB,KAAKyB,aAAgBzB,KAAKK,sBAAsBK,IAC9C,cACckB,aAAaC,UAAS,SAACC,GACrCZ,EAAKa,sBAAsBD,GAC3BZ,EAAKd,SAAS0B,EAAME,IAAG,SAACR,GAAQ,OAAAA,EAAKP,QAAOgB,KAAK,SAK9CnC,EAAAL,UAAAyC,iBAAP,SAAwBC,GACtBnC,KAAKI,SAAW+B,GAGXrC,EAAAL,UAAA2C,kBAAP,SAAyBD,KAIlBrC,EAAAL,UAAA4C,iBAAP,SAAyBC,KAIlBxC,EAAAL,UAAA8C,YAAP,SAAmBC,EAAmBC,GACpC,OAAQD,EAAOE,SAASD,GAAmBC,UAGrC5C,EAAAL,UAAAsC,sBAAR,SAA8BD,GAC5B9B,KAAKG,aAAgC,IAAjB2B,EAAMT,QAAmC,KAAnBS,EAAM,GAAGb,QAG7CnB,EAAAL,UAAAmB,uBAAR,SAA+B+B,GAC7B,OAAO3C,KAAKD,YAAYO,MAAM,CAC5BW,MAAO0B,EAAKC,8BAxFjBjD,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,oBACVC,SAAA,u6BAEAgD,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAalD,EACbmD,OAAO,6DAbXC,EAAAA,eAgGFpD,EAtGA,GCAA,IAAAqD,EAAA,WAQA,SAAAA,KAY6B,2BAZ5BC,EAAAA,SAAQ9D,KAAA,CAAC,CACR+D,aAAc,CAAC7D,EAAmBM,GAClCwD,QAAS,CACPC,EAAAA,cACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,mBAEFC,QAAS,CAACrE,EAAmBM,OAEFqD,EApB7B","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgCatLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cat-ng-cat-lib',\n  template: `\n    <p>\n      ng-cat-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgCatLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  FormGroup,\n  FormArray,\n  ControlValueAccessor,\n  FormBuilder\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { faTimesCircle, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'cat-multi-textbox',\n  templateUrl: './multitextbox.component.html',\n  styleUrls: ['./multitextbox.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MultiTextboxComponent,\n      multi: true\n    }\n  ]\n})\nexport class MultiTextboxComponent implements ControlValueAccessor {\n  public faTimesCircle = faTimesCircle;\n  public faPlusSquare = faPlusSquare;\n  public multiTextboxFormGroup: FormGroup;\n  public valueArray: FormArray;\n  public showAddNew = true;\n  private subscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder) {}\n  public onChange: any = () => {};\n\n  public ngOnInit() {\n    this.multiTextboxFormGroup = this.formBuilder.group({\n      valueArray: this.formBuilder.array([])\n    });\n  }\n\n  public addTextbox() {\n    (this.multiTextboxFormGroup.get('valueArray') as FormArray).push(\n      this.createTextboxFormGroup('')\n    );\n  }\n\n  public removeTextbox(index: number) {\n    (this.multiTextboxFormGroup.get('valueArray') as FormArray).removeAt(index);\n  }\n\n  // Receives value from parent\n  public writeValue(value) {\n    const control = new FormArray([]);\n    if (value && value.length > 0) {\n      value.split('|').forEach(item => {\n        control.push(this.createTextboxFormGroup(item));\n      });\n    } else {\n      control.push(this.createTextboxFormGroup(''));\n      this.showAddNew = false;\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.multiTextboxFormGroup.setControl('valueArray', control);\n\n    this.subscription = (this.multiTextboxFormGroup.get(\n      'valueArray'\n    ) as FormArray).valueChanges.subscribe(items => {\n      this.setShowAddNewProperty(items);\n      this.onChange(items.map(item => item.value).join('|'));\n    });\n  }\n\n  // Call when value changes\n  public registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  public getControls(frmGrp: FormGroup, key: string) {\n    return (frmGrp.controls[key] as FormArray).controls;\n  }\n\n  private setShowAddNewProperty(items: any) {\n    this.showAddNew = !(items.length === 1 && items[0].value === '');\n  }\n\n  private createTextboxFormGroup(text: string): FormGroup {\n    return this.formBuilder.group({\n      value: text.trim()\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgCatLibComponent } from './ng-cat-lib.component';\nimport { MultiTextboxComponent } from './multitextbox/multitextbox.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [NgCatLibComponent, MultiTextboxComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FontAwesomeModule\n  ],\n  exports: [NgCatLibComponent, MultiTextboxComponent]\n})\nexport class NgCatLibModule {}\n"]}
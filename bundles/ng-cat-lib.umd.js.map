{"version":3,"file":"ng-cat-lib.umd.js","sources":["ng://ng-cat-lib/lib/ng-cat-lib.service.ts","ng://ng-cat-lib/lib/ng-cat-lib.component.ts","ng://ng-cat-lib/lib/multitextbox/multitextbox.component.ts","ng://ng-cat-lib/lib/ng-cat-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgCatLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cat-ng-cat-lib',\n  template: `\n    <p>\n      ng-cat-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgCatLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  FormGroup,\n  FormArray,\n  ControlValueAccessor,\n  FormBuilder\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { faTimesCircle, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'cat-multi-textbox',\n  templateUrl: './multitextbox.component.html',\n  styleUrls: ['./multitextbox.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MultiTextboxComponent,\n      multi: true\n    }\n  ]\n})\nexport class MultiTextboxComponent implements ControlValueAccessor {\n  public faTimesCircle = faTimesCircle;\n  public faPlusSquare = faPlusSquare;\n  public multiTextboxFormGroup: FormGroup;\n  public valueArray: FormArray;\n  public showAddNew = true;\n  private subscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder) {}\n  public onChange: any = () => {};\n\n  public ngOnInit() {\n    this.multiTextboxFormGroup = this.formBuilder.group({\n      valueArray: this.formBuilder.array([])\n    });\n  }\n\n  public addTextbox() {\n    (this.multiTextboxFormGroup.get('valueArray') as FormArray).push(\n      this.createTextboxFormGroup('')\n    );\n  }\n\n  public removeTextbox(index: number) {\n    (this.multiTextboxFormGroup.get('valueArray') as FormArray).removeAt(index);\n  }\n\n  // Receives value from parent\n  public writeValue(value) {\n    const control = new FormArray([]);\n    if (value && value.length > 0) {\n      value.split('|').forEach(item => {\n        control.push(this.createTextboxFormGroup(item));\n      });\n    } else {\n      control.push(this.createTextboxFormGroup(''));\n      this.showAddNew = false;\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.multiTextboxFormGroup.setControl('valueArray', control);\n\n    this.subscription = (this.multiTextboxFormGroup.get(\n      'valueArray'\n    ) as FormArray).valueChanges.subscribe(items => {\n      this.setShowAddNewProperty(items);\n      this.onChange(items.map(item => item.value).join('|'));\n    });\n  }\n\n  // Call when value changes\n  public registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  public getControls(frmGrp: FormGroup, key: string) {\n    return (frmGrp.controls[key] as FormArray).controls;\n  }\n\n  private setShowAddNewProperty(items: any) {\n    this.showAddNew = !(items.length === 1 && items[0].value === '');\n  }\n\n  private createTextboxFormGroup(text: string): FormGroup {\n    return this.formBuilder.group({\n      value: text.trim()\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgCatLibComponent } from './ng-cat-lib.component';\nimport { MultiTextboxComponent } from './multitextbox/multitextbox.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [NgCatLibComponent, MultiTextboxComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FontAwesomeModule\n  ],\n  exports: [NgCatLibComponent, MultiTextboxComponent]\n})\nexport class NgCatLibModule {}\n"],"names":["Injectable","Component","faTimesCircle","faPlusSquare","FormArray","NG_VALUE_ACCESSOR","FormBuilder","NgModule","BrowserModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","FontAwesomeModule"],"mappings":"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"}
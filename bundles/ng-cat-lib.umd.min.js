!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@fortawesome/free-solid-svg-icons"),require("@angular/platform-browser"),require("@angular/material"),require("@fortawesome/angular-fontawesome")):"function"==typeof define&&define.amd?define("ng-cat-lib",["exports","@angular/core","@angular/forms","@fortawesome/free-solid-svg-icons","@angular/platform-browser","@angular/material","@fortawesome/angular-fontawesome"],t):t((e=e||self)["ng-cat-lib"]={},e.ng.core,e.ng.forms,e.freeSolidSvgIcons,e.ng.platformBrowser,e.ng.material,e.angularFontawesome)}(this,function(e,t,o,r,n,i,a){"use strict";var u=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),s=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"cat-ng-cat-lib",template:"\n    <p>\n      ng-cat-lib works!\n    </p>\n  "}]}],e.ctorParameters=function(){return[]},e}(),l=function(){function e(e){this.formBuilder=e,this.faTimesCircle=r.faTimesCircle,this.faPlusSquare=r.faPlusSquare,this.showAddNew=!0,this.onChange=function(){}}return e.prototype.ngOnInit=function(){this.multiTextboxFormGroup=this.formBuilder.group({valueArray:this.formBuilder.array([])})},e.prototype.addTextbox=function(){this.multiTextboxFormGroup.get("valueArray").push(this.createTextboxFormGroup(""))},e.prototype.removeTextbox=function(e){this.multiTextboxFormGroup.get("valueArray").removeAt(e)},e.prototype.writeValue=function(e){var t=this,r=new o.FormArray([]);e&&e.length>0?e.split("|").forEach(function(e){r.push(t.createTextboxFormGroup(e))}):(r.push(this.createTextboxFormGroup("")),this.showAddNew=!1),this.subscription&&this.subscription.unsubscribe(),this.multiTextboxFormGroup.setControl("valueArray",r),this.subscription=this.multiTextboxFormGroup.get("valueArray").valueChanges.subscribe(function(e){t.setShowAddNewProperty(e),t.onChange(e.map(function(e){return e.value}).join("|"))})},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){},e.prototype.setDisabledState=function(e){},e.prototype.getControls=function(e,t){return e.controls[t].controls},e.prototype.setShowAddNewProperty=function(e){this.showAddNew=!(1===e.length&&""===e[0].value)},e.prototype.createTextboxFormGroup=function(e){return this.formBuilder.group({value:e.trim()})},e.decorators=[{type:t.Component,args:[{selector:"cat-multi-textbox",template:'<div [formGroup]="multiTextboxFormGroup" style="width: 100%;">\n  <div formArrayName="valueArray" style="width: 100%;">\n    <div\n      *ngFor="\n        let item of getControls(multiTextboxFormGroup, \'valueArray\');\n        let i = index\n      "\n      style="width: 100%;"\n    >\n      <div [formGroupName]="i">\n        <mat-form-field>\n          <input matInput formControlName="value" />\n          <fa-icon\n            style="position: absolute; cursor: pointer;"\n            [icon]="faTimesCircle"\n            (click)="removeTextbox(i)"\n            *ngIf="getControls(multiTextboxFormGroup, \'valueArray\').length > 1"\n          ></fa-icon>\n        </mat-form-field>\n      </div>\n    </div>\n    <span\n      style="margin-left: 3px; cursor: pointer;"\n      (click)="addTextbox()"\n      *ngIf="showAddNew"\n    >\n      <fa-icon [icon]="faPlusSquare"></fa-icon>\n      Add New\n    </span>\n  </div>\n</div>\n',providers:[{provide:o.NG_VALUE_ACCESSOR,useExisting:e,multi:!0}],styles:[""]}]}],e.ctorParameters=function(){return[{type:o.FormBuilder}]},e}();var c=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[s,l],imports:[n.BrowserModule,o.FormsModule,o.ReactiveFormsModule,i.MatFormFieldModule,i.MatInputModule,a.FontAwesomeModule],exports:[s,l]}]}],e}();e.MultiTextboxComponent=l,e.NgCatLibComponent=s,e.NgCatLibModule=c,e.NgCatLibService=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng-cat-lib.umd.min.js.map
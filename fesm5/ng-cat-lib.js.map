{"version":3,"file":"ng-cat-lib.js","sources":["ng://ng-cat-lib/lib/ng-cat-lib.service.ts","ng://ng-cat-lib/lib/ng-cat-lib.component.ts","ng://ng-cat-lib/lib/multitextbox/multitextbox.component.ts","ng://ng-cat-lib/lib/ng-cat-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgCatLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cat-ng-cat-lib',\n  template: `\n    <p>\n      ng-cat-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgCatLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  FormGroup,\n  FormArray,\n  ControlValueAccessor,\n  FormBuilder\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { faTimesCircle, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'cat-multi-textbox',\n  templateUrl: './multitextbox.component.html',\n  styleUrls: ['./multitextbox.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MultiTextboxComponent,\n      multi: true\n    }\n  ]\n})\nexport class MultiTextboxComponent implements ControlValueAccessor {\n  public faTimesCircle = faTimesCircle;\n  public faPlusSquare = faPlusSquare;\n  public multiTextboxFormGroup: FormGroup;\n  public valueArray: FormArray;\n  public showAddNew = true;\n  private subscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder) {}\n  public onChange: any = () => {};\n\n  public ngOnInit() {\n    this.multiTextboxFormGroup = this.formBuilder.group({\n      valueArray: this.formBuilder.array([])\n    });\n  }\n\n  public addTextbox() {\n    (this.multiTextboxFormGroup.get('valueArray') as FormArray).push(\n      this.createTextboxFormGroup('')\n    );\n  }\n\n  public removeTextbox(index: number) {\n    (this.multiTextboxFormGroup.get('valueArray') as FormArray).removeAt(index);\n  }\n\n  // Receives value from parent\n  public writeValue(value) {\n    const control = new FormArray([]);\n    if (value && value.length > 0) {\n      value.split('|').forEach(item => {\n        control.push(this.createTextboxFormGroup(item));\n      });\n    } else {\n      control.push(this.createTextboxFormGroup(''));\n      this.showAddNew = false;\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.multiTextboxFormGroup.setControl('valueArray', control);\n\n    this.subscription = (this.multiTextboxFormGroup.get(\n      'valueArray'\n    ) as FormArray).valueChanges.subscribe(items => {\n      this.setShowAddNewProperty(items);\n      this.onChange(items.map(item => item.value).join('|'));\n    });\n  }\n\n  // Call when value changes\n  public registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  public getControls(frmGrp: FormGroup, key: string) {\n    return (frmGrp.controls[key] as FormArray).controls;\n  }\n\n  private setShowAddNewProperty(items: any) {\n    this.showAddNew = !(items.length === 1 && items[0].value === '');\n  }\n\n  private createTextboxFormGroup(text: string): FormGroup {\n    return this.formBuilder.group({\n      value: text.trim()\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgCatLibComponent } from './ng-cat-lib.component';\nimport { MultiTextboxComponent } from './multitextbox/multitextbox.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [NgCatLibComponent, MultiTextboxComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FontAwesomeModule\n  ],\n  exports: [NgCatLibComponent, MultiTextboxComponent]\n})\nexport class NgCatLibModule {}\n"],"names":[],"mappings":"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"}